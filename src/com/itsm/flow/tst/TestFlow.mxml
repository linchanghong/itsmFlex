<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:mxml="com.itsm.common.custom.*"
		  xmlns:flow="com.itsm.flow.base.*"
		  creationComplete="onCompleteHandler(event)"
		  width="100%" height="100%" >
	<fx:Script>
		<![CDATA[
			import com.itsm.common.utils.AppCore;
			import com.itsm.flow.app.GlobalUtil;
			import com.itsm.flow.events.FlowAdvancedatagridEvent;
			import com.itsm.flow.events.ViewFlowEvent;
			import com.itsm.flow.tst.vo.TestFlow;
			
			import common.utils.TAlert;
			
			import mx.collections.ArrayCollection;
			import mx.containers.Grid;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.gridClasses.CellPosition;
			import spark.events.GridSelectionEvent;
			private var appCore:AppCore;
			private var FAppCore:GlobalUtil = GlobalUtil.getInstence();
			
			private static const FLOW_TYPE:String="4";   //
			
			protected function onCompleteHandler(event:FlexEvent):void{
				AppHistoryGrid.gridMain.OnlyInit();
				appCore = AppCore.getInstance();
				findAll();
			}
			
			private function findAll():void{
				appCore.dataDeal.dataRemote("testFlow","TestFlow","findAll",[]);
				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT, findAllResult);
			}
			
			private function findAllResult(event:ResultEvent):void{
				var json:String = event.result as String;
				var arr:Array = JSON.parse(json) as Array;
				dg.dataProvider = new ArrayCollection(arr);
			}
			
			/**
			 * 保存按钮
			 **/
			protected function onSave(event:MouseEvent):void{
				var testFlow:com.itsm.flow.tst.vo.TestFlow=new com.itsm.flow.tst.vo.TestFlow();
				testFlow.name=uname.text;
				testFlow.wage=wage.text;
				testFlow.remark=remark.text;
				testFlow.sendId=FAppCore.FCusUser.UserId;
				
				var ac:ArrayCollection = new ArrayCollection();
				ac.addItem(testFlow);
				ac.addItem(FAppCore.FCusUser);
				
				appCore.dataDeal.dataRemote("testFlow","TestFlow","add",[JSON.stringify(ac.source)]);
				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT, addResult);
			}
			
			private function addResult(event:ResultEvent):void{
				var json:String = event.result as String;
				var obj:Object = JSON.parse(json) as Object;
				if(obj.type==1) onCancel(null);
				else if(obj.type==-2) TAlert.show("保存失败！", "系统提示");
				else if(obj.type==-1) TAlert.show("后台异常！", "系统提示");
				else if(obj.type==0) TAlert.show("请建Model！", "系统提示");
			}
			
			/**
			 * 按钮取消
			 **/ 
			protected function onCancel(event:MouseEvent):void{
				this.currentState="Index";
				findAll();
				uname.text="";
				wage.text="";
				remark.text="";
			}
			
			private var FISAfterFlowCommit:Boolean=false;
			/**
			 * 呈报，
			 **/
			protected function onSubmit(event:MouseEvent):void{
				var item:Object = dg.selectedItem;
				if(item==null)
					TAlert.show("请选择要呈报的数据！", "系统提示");
				else{
					var arr:Array = new  Array();
					var Oitem:String= "department:"+FAppCore.FCusUser.DeptId;
					arr.push(Oitem);
					
					//if (item.flowState == 138) FISAfterFlowCommit = true;
					var sender:Object = new Object();
					sender.id=FAppCore.FCusUser.UserId;
					sender.personName=FAppCore.FCusUser.UserName;
					FAppCore.StartFlowInstence(sender, item.sendId, FLOW_TYPE, item.id, arr, FISAfterFlowCommit, submitResult);
				}
			}
			
			private function  submitResult(event:ResultEvent):void{
				findAll();
			}
			
			protected function dg_clickHandler(event:MouseEvent):void
			{
				var obj:Object = dg.selectedItem;
				if(obj!=null && obj.flowId!=null){
					AppHistoryGrid.getApproveHistory(FLOW_TYPE, obj.id);
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:states>
		<s:State name="Index"/>
		<s:State name="Editor"/>
	</s:states>
	<s:VGroup width="100%" height="100%">
		<s:HGroup width="100%" height="30" verticalAlign="middle">
			<s:Button id="add" label="新增" includeIn="Index" click="this.currentState='Editor';"/>
			<!--<s:Button id="delete" label="删除" includeIn="Index"/>
			<s:Button id="update" label="修改" includeIn="Index"/>
			<s:Button id="view" label="浏览" includeIn="Index"/>-->
			<s:Button id="submit" label="呈报" includeIn="Index" click="onSubmit(event);"/>
			<s:Button id="save" label="保存" includeIn="Editor" click="onSave(event);"/>
			<s:Button id="cancel" label="取消" includeIn="Editor" click="onCancel(event);"/>
		</s:HGroup>
		<mxml:CustomDataGrid id="dg" width="100%" height="100%" 
							 isCheckBox="false" allowMultipleSelection="false" 
							 isRowNum="true" isControlColumns="true" isPaging="true" includeIn="Index"
							 click="dg_clickHandler(event)">
			<!--列的顺序等-->
			<mxml:columns>
				<mx:DataGridColumn dataField="name" headerText="姓名"/>
				<mx:DataGridColumn dataField="state" headerText="流程状态"/>
				<mx:DataGridColumn dataField="sendName" headerText="发起人"/>
				<mx:DataGridColumn dataField="wage" headerText="工资"/>
				<mx:DataGridColumn dataField="remark" headerText="备注"/>
			</mxml:columns>
		</mxml:CustomDataGrid>
		<flow:ComApproveHistory includeIn="Index" id="AppHistoryGrid" width="100%" height="60%"/>
		
		<s:VGroup width="100%" height="100%" includeIn="Editor">
			<s:HGroup width="100%" height="30" verticalAlign="middle">
				<s:Label text="姓名"/>
				<s:TextInput id="uname" width="150"/>
			</s:HGroup>
			<s:HGroup width="100%" height="30" verticalAlign="middle">
				<s:Label text="工资"/>
				<s:TextInput id="wage" width="80" restrict="0-9"/>
			</s:HGroup>
			<s:HGroup width="100%" verticalAlign="middle">
				<s:Label text="备注"/>
				<s:TextArea id="remark" width="400"/>
			</s:HGroup>
		</s:VGroup>
	</s:VGroup>
</s:Module>