<?xml version="1.0" encoding="utf-8"?>
<advanceddatagrid:CustomerAdvancedDataGrid xmlns:fx="http://ns.adobe.com/mxml/2009"
										   xmlns:s="library://ns.adobe.com/flex/spark"
										   xmlns:mx="library://ns.adobe.com/flex/mx"
										   xmlns:advanceddatagrid="common.components.advanceddatagrid.*"
										   width="100%" height="100%" initGrid="flowInit()" >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.itsm.flow.app.GlobalUtil;
			import com.itsm.flow.events.FlowAdvancedatagridEvent;
			import com.itsm.flow.events.ViewFlowEvent;
			import com.services.flow.FlowNodeInstenceService;
			import com.vo.FlowNodeInstence;
			
			import common.components.advanceddatagrid.CellColorIFactory;
			import common.utils.FAppCoreUtil;
			
			import mx.collections.ArrayCollection;
			import mx.collections.GroupingField;
			import mx.controls.AdvancedDataGrid;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridItemRenderer;
			import mx.core.FlexGlobals;
			import mx.rpc.events.ResultEvent;
			
			public var flowtodoheaderArr:Array=[];
			
			[Bindable]
			private var FAppCore:GlobalUtil = GlobalUtil.getInstence();
			
			private var itemRender:IFactory = new CellColorIFactory(cellColor);
			//定义渲染器中用到的回调函数
			private function cellColor(dataField:String,data:Object):uint{
				//设置前两页显示颜色
				if(  data["warnTag"]==1){
					return 0xFF0000;
				}
				//设置默认显示颜色
				return 0x000000;
			}
			
			private function flowInit():void{
				super.grid.itemRenderer = itemRender;
				super.grid.groupItemRenderer=itemRender; 
				
				if (flowtodoheaderArr==null || flowtodoheaderArr.length==0){
					flowtodoheaderArr = new Array( 
						["业务类型","flowModelId",120,"",FAppCoreUtil.fcFlowTypeName,""],     //字段，数组1：字段名，数组2：显示字段						
						//["业务部门","flowDeptName",85,"",FAppCoreUtil.fcString,""],
						["呈报者","senderName",70,"",FAppCoreUtil.fcString,""],     //数组3：显示宽度，为0表示不显示，数组4：显示为CheckBox
						//["业务ID","billId",70,"",FAppCoreUtil.fcString,""],
						["呈报标题","flowTitle",300,"",FAppCoreUtil.fcString,""],   //数组5:字段类型,数组6：常量ID
						["接收时间","handleDate",100,"",FAppCoreUtil.fcString,""],
						["流程状态","checkState",70,"",FAppCoreUtil.fcFlowCheckState,""]
						//["提醒","warnTag",0,"",FAppCoreUtil.fcInteger,""]
					);
				}
				headerArr = flowtodoheaderArr;
					
				var str:String = " 1=1 ";
				WhereStr = str + " and CheckState = '142' and MakeRubbish ='0'  and HandlerId = '"+FAppCore.FCusUser.UserId+"'";
				SortAD = "OprtTypeID asc,HandleDate desc";
				RemoteService = new FlowNodeInstenceService("flowGlobal", "FlowGlobal"); 
				RemoteGetAllCount = "GetAllCount";
				RemoteOperation = "GetPageData";
				ShowUpGuide = false;
				ShowDownGuide=true;
				isMulPage = true;
				//AutoDataBind = true;
				displayItemsExpanded = true;
				isSumLine = false;
				groupFields = "FlowModelId";
				groupingFunction = [groupLabelFunc1];
				groupingCompareFunction = myCompare;
				isClickExpend = true;
				isLoadToFirst = false;
				
				grid.horizontalScrollPolicy="off";
				grid.allowMultipleSelection = true;
				//添加右键菜单
				//var allcontextmenu:ContextMenu=new ContextMenu();
				//var viewFlowInstence:ContextMenuItem=new ContextMenuItem("查看流程");
				//viewFlowInstence.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, viewFlowInstenceFunction);
				
				//allcontextmenu.customItems.push(viewFlowInstence);
				//grid.contextMenu=allcontextmenu;
				//grid.contextMenu.hideBuiltInItems();
			}
			/**
			 * 分组显示
			 * */
			private function groupLabelFunc1(item:Object,field:GroupingField):String{
				/* if (item.hasOwnProperty("children") && (item.children as ArrayCollection).length>0)
					return item.children[0]["FlowName"]?item.children[0]["FlowName"]:"";
				else
					return item["GroupLabel"]; */ 
			   return	item["flowName"]?item["flowName"]:"";
			}
			/**
			 * 分组排序
			 * */
			private function myCompare(a:Object, b:Object, fields:Array=null):int
			{
				if (!a.hasOwnProperty("oprtTypeID") || !b.hasOwnProperty("oprtTypeID")) return 0;
				if (a["oprtTypeID"]<b["oprtTypeID"]){
					return -1;
				}else if (a["oprtTypeID"]>b["oprtTypeID"]){
					return 1; 
				}else{
					if (!a.hasOwnProperty("handleDate") || !b.hasOwnProperty("handleDate")) return 0;
					if (a["handleDate"]>b["handleDate"])
						return -1;
					else
						return 1;
				}
				return 0;
			}
			//刷新数据
			public function reloaddata():void{
				super.GridLoadData();
			}
			//导出待办到Excel 
			public function toDoExcelFlow():void{
//				new ExportExcelService().ExportPeoPlanExcelFile(103,FAppCore.FCusUser.CompId,this.WhereStr,FAppCore.FExcelPath)
//					.addResultListener(onExportExcel);
			}
			private function onExportExcel(aEvent:ResultEvent):void {	
				FAppCore.closeLoading();	   
				if(aEvent.result!=null) {
					var sFileName:String = String(aEvent.result);
					if(sFileName!='') {
						var mURL:String=FAppCore.FExcelUrl + sFileName; 
						navigateToURL(new URLRequest(mURL));
					} 
					else FAppCore.sendSysInfo("导出Execl失败");	     		     
				}
			}
			//查看流程
			private function viewFlowInstenceFunction(event:ContextMenuEvent):void {
				//var flowNodeInstence:FlowNodeInstence;
				var adg:AdvancedDataGrid = AdvancedDataGrid(event.currentTarget);
				var obj:Object = adg.selectedItem;
				
				if (event.mouseTarget is AdvancedDataGridItemRenderer) {
					var item:Object = AdvancedDataGridItemRenderer(event.mouseTarget).data;
					var viewflowevent:ViewFlowEvent = new ViewFlowEvent(item);
					//FlexGlobals.topLevelApplication.
					dispatchEvent(viewflowevent); 
				} 
			}
			
			//重写双击事件
			override public function GridDoubleClick(event:MouseEvent):void{
				super.GridDoubleClick(event);
				if (!super.expendGrid())
					openFlowTodoWindow(null);
			}
			
			//打开审批
			public function openFlowTodoWindow(event:Event):void {
				//var flowNodeInstence:FlowNodeInstence=grid.selectedItem as FlowNodeInstence;
				var flowNodeInstence:Object=grid.selectedItem;
				if (flowNodeInstence==null) return;
				var openevent:FlowAdvancedatagridEvent = new FlowAdvancedatagridEvent(flowNodeInstence,FlowAdvancedatagridEvent.OPENFLOWTODOWINDOW);
				dispatchEvent(openevent); 
			}
			
			
		]]>
	</fx:Script>
</advanceddatagrid:CustomerAdvancedDataGrid>
