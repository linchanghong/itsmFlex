<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:container="com.framelib.container.*"
		  xmlns:control="com.framelib.control.*"
		  xmlns:custom="com.itsm.common.custom.*"
		  xmlns:mxml="com.itsm.common.mxml.*"
		  xmlns:comp="com.itsm.serviceManager.component.*"
		  xmlns:ns="http://www.c.sccl.com" 
		  xmlns:flow="com.itsm.flow.base.*"
		  width="100%" height="100%" 
		  creationComplete="knowledgeModule_creationCompleteHandler(event)">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RadioButtonGroup id="examineGroup"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.itsm.common.utils.AppCore;
			import com.itsm.flow.app.GlobalUtil;
			import com.itsm.flow.events.ReloadFlowtodoEvent;
			
			import common.utils.TAlert;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			private var IsExamine:Boolean=false;     //审核状态
			
			private static const FLOW_TYPE:String="5";   //流程业务类型
			
			[Bindable]
			private var attachMentsArray:ArrayCollection=new ArrayCollection();
			
			public var billId:String;
			public var oprtTypeId:String;
			
			private var FAppCore:GlobalUtil = GlobalUtil.getInstence();
			private var appCore:AppCore=AppCore.getInstance();
			
			//将远程服务器返回的数据进行处理
			private function getResultObj(event:ResultEvent):Object{
				var resultStr:String = event.result.toString();	
				return appCore.jsonDecoder.decode(resultStr);
			}
			
			//创建完成调用方法
			protected function knowledgeModule_creationCompleteHandler(event:FlexEvent):void
			{
				var knowledgeInfoId:String=billId;
				appCore.dealData("knowledgeManagerAPI", "KnowledgeManagerAPI","findKnowledgeInfoById",[knowledgeInfoId],loadFlowData);
			}
			
			/**
			 * 读取数据
			 * */
			private var knowledgeInfo:Object;
			private function loadFlowData(event:ResultEvent):void {
				knowledgeInfo=appCore.jsonDecoder.decode(event.result as String);
				konwledgeTitle.text=knowledgeInfo.knowledgeTitle;
				text_systemName.text=knowledgeInfo.knowledgeType.systemName;
				text_moduleName.text=knowledgeInfo.belongsBusiness.moduleName;
				IsExamine=(knowledgeInfo.isExamine=="0"||knowledgeInfo.isExamine=="2")?false:true;
				text_content.text=knowledgeInfo.knowledgeContent;
				var attBussId:String=(knowledgeInfo.id).toString();
				appCore.dealData("frameAPI", "FrameAPI", "findRelateAttachments",["T_KNOWLEDGE_INFO", attBussId], bindDateToDataGrid);
			}
			private function bindDateToDataGrid(event:ResultEvent):void{
				if(event.result != null) {
					attachMentsArray = appCore.jsonDecoder.decode(event.result as String) as ArrayCollection;
				}
				AppHistoryGrid.gridMain.OnlyInit();
				AppHistoryGrid.getApproveHistory(oprtTypeId, billId);
			}
			
			
			//保存按钮点击事件
			private function saveBtn_clickHandler(event:MouseEvent):void{
				if(!verification()){
					return;
				}
				var knowledgeInof:Object=new Object();
				knowledgeInof.knowledgeTitle=konwledgeTitle.text;
				knowledgeInof.knowledgeType=knowledgeInfo.knowledgeType;
				knowledgeInof.knowledgeType.systemID=knowledgeInfo.knowledgeType.systemID;
				knowledgeInof.belongsBusiness=knowledgeInfo.belongsBusiness;
				knowledgeInof.belongsBusiness.moduleID=knowledgeInfo.belongsBusiness.moduleID;
				knowledgeInof.knowledgeContent=text_content.text;
				knowledgeInof.isExamine="0";
				
				var user:Object = new Object();
				user.id = appCore.loginUser.id;
				user.personId = appCore.loginUser.msPerson.id;
				user.companyID = appCore.loginUser.companyId;
				knowledgeInof.publishStaff=user;
				knowledgeInof.dr=0;
				
				var df:DateFormatter = new DateFormatter();new DateFormatter
				df.formatString="YYYY-MM-DD JJ:NN:SS";
				knowledgeInof.modifyDate = df.format(new Date());
				
				knowledgeInof.id = knowledgeInfo.id; 
				knowledgeInof.publishDate = knowledgeInfo.publishDate;
				
				appCore.dataDeal.dataRemote("knowledgeManagerAPI","KnowledgeManagerAPI","updateKnowledgeInfo", [appCore.jsonEncoder.encode(knowledgeInof)]);
				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT,saveBtn_clickHandle);
				
			}
			[Bindable]
			private var attBussId:String="";                       //附件上传表业务id
			private function saveBtn_clickHandle(event:ResultEvent):void{
				var resultStr:String=(event.result).toString();
				if(resultStr=="0"){
					TAlert.show("保存失败！", "系统提示");
					return;
				}else{
					//保存上传附件
					attBussId = resultStr;
					fileGrid.saveDgToDb(attBussId, "T_KNOWLEDGE_INFO");
					fileGrid.reSetData();
					submitBtn.enabled=true;
				}
			}
			
			//再次呈报按钮点击事件
			private function submitBtn_clickHandler(event:MouseEvent):void{
				var item:Object = knowledgeInfo;
				
				if(item==null)
					TAlert.show("请选择要呈报的数据！", "温馨提示");
				else{
					if(item.id > 0){
						var arr:Array = new  Array();
						var Oitem:String="department:"+FAppCore.FCusUser.DeptId;
						arr.push(Oitem);
						//if (item.flowState == 138) FISAfterFlowCommit = true;
						var sender:Object = new Object();
						sender.id=FAppCore.FCusUser.UserId;
						sender.personName=FAppCore.FCusUser.UserName;
						FAppCore.StartFlowInstence(sender, sender.id,FLOW_TYPE, item.id, arr, true, submitResult);
					}else{
						TAlert.show("系统繁忙,稍后再试!","温馨提示");
					}
				}
			}
			private function  submitResult(event:ResultEvent):void{
				submitBtn.enabled=false;
				var closeevent:ReloadFlowtodoEvent = new ReloadFlowtodoEvent(this);
				FlexGlobals.topLevelApplication.dispatchEvent(closeevent);
			}
			//数据验证
			private function verification():Boolean{
				if(konwledgeTitle.text==null||konwledgeTitle.text==""){
					TAlert.show("请填写知识标题！","系统提示");
					return false;
				}
				if(text_systemName.text==null||text_systemName.text==""){
					TAlert.show("请选择所属系统！","系统提示");
					return false;
				}
				if(text_moduleName.text==null||text_moduleName.text==""){
					TAlert.show("请选择所属业务！","系统提示");
					return false;
				}
				if(text_content.text==null||text_content.text==""){
					TAlert.show("请填写知识内容！","系统提示");
					return false;
				} else{
					return true;
				}
			}
			
			/**
			 * 同意后处理结果
			 */
			public function flowResult():void{
				TAlert.show("处理成功");
			}
			
			/**
			 * 不同意后处理结果
			 */
			public function disagree():void{
				TAlert.show("流程退回");
			}
		]]>
	</fx:Script>
	<s:Scroller width="100%" height="100%">	
		<s:VGroup width="100%" height="100%">
			<mx:VDividedBox width="100%" height="100%" minHeight="550" creationPolicy="all">
				<s:Scroller width="100%" height="40%">
					<s:VGroup width="100%" height="100%">
						<s:HGroup width="100%" height="25" verticalAlign="middle">
							<s:Button id="saveBtn" width="75" height="100%"
									  label="保存"
									  styleName="save" click="saveBtn_clickHandler(event)"/>
									  
							
							<s:Button id="submitBtn"  width="75" height="100%"
									  label="呈报"
									  enabled="false"
									  styleName="submit" click="submitBtn_clickHandler(event)"/>
						</s:HGroup>
						
						<s:HGroup width="100%" height="25" verticalAlign="middle">
							<control:FormLabel label="所属系统：" width="16%" height="100%" verticalAlign="middle" required="true"/>
							<control:TextInputFl id="text_systemName" width="16%" height="100%" enabled="false"/>
							<control:FormLabel label="关联业务：" width="16%" height="100%" verticalAlign="middle" required="true"/>
							<control:TextInputFl id="text_moduleName" width="16%" height="100%" enabled="false"/>
						</s:HGroup>
						
						<s:HGroup width="100%" height="25" verticalAlign="middle">
							<control:FormLabel label="知识标题：" width="16%" height="100%" verticalAlign="middle" required="true" enabled="false"/>
							<control:TextInputFl id="konwledgeTitle" width="16%" height="100%"/>
						</s:HGroup>
						
						
						<s:HGroup width="100%" height="28" verticalAlign="middle">
							<control:FormLabel label="审核状态：" verticalAlign="middle"/>
							<s:RadioButton groupName="examineGroup" id="rbtn_isExa" label="已审核" selected="{IsExamine}" enabled="false"/>
							<s:RadioButton groupName="examineGroup" id="rbtn_enExa" label="未审核" selected="{!IsExamine}" enabled="false"/>
						</s:HGroup>
						<s:HGroup width="100%" height="100%" verticalAlign="middle">
							<mx:TabNavigator id="tab_info" width="100%" height="100%">
								<s:NavigatorContent id="nav_content" width="100%" height="100%" label="知识内容">
									<s:TextArea id="text_content" width="100%" height="100%"/>
								</s:NavigatorContent>
								<s:NavigatorContent id="nav_att" width="100%" height="100%" label="文档附件">
									<container:GroupBox width="100%" height="100%" title="附件">
										<mxml:UploadDocumentsInfo id="fileGrid" height="100%" width="100%" deleteBtnEnable="false"
																  uploadBtnEnable="false" attachMentsArr="{attachMentsArray}"/>
									</container:GroupBox>
								</s:NavigatorContent>
							</mx:TabNavigator>
						</s:HGroup>
					</s:VGroup>
				</s:Scroller>
				<flow:ComApproveHistory id="AppHistoryGrid" width="100%" height="60%"/>
			</mx:VDividedBox>
		</s:VGroup>
	</s:Scroller>
</s:Module>