<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%"
		 creationComplete="group1_creationCompleteHandler(event)">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="assessSaved", type="flash.events.Event")]
		[Event(name="haveBeenData", type="flash.events.Event")]
		[Event(name="someDataChanged", type="flash.events.Event")]
		[Event(name="haveNoData", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.itsm.common.utils.AppCore;
			import com.itsm.serviceManager.module.bugManager.code.BugUtil;
			
			import common.utils.TAlert;
			
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			
			//工具类
			private var appCore:AppCore = AppCore.getInstance();
			/**需求分解表主键*/
			[Bindable]
			public var userDemand:String = "-1";
			private var _assessor:String = "-1";
			/**考评环节:0：未提交，1：需求分析，2：开发经理指派人员，3：开发，4：单元测试，5：功能测试，6：项目经理审核，7：完成*/
			[Bindable]
			public var demandsLink:String = "-1";
			private var _examiner:String = "-1";
			/**考评指标种类*/
			[Bindable]
			public var jobGradeType:String = "-1";
			/**是否显示保存按钮*/
			[Bindable]
			public var enableSaveBtn:Boolean = false;
			/**提示信息*/
			[Bindable]
			public var showMsg:String;
			[Bindable]
			private var examinerInDB:String = "-1";
			[Bindable]
			private var assessorInDB:String = "-1";
			//是否重置人员
			private var personFlag:Boolean = false;
			
			private function resetEA(flag:String, data:String):void{
				for( var i:uint; i < main.numElements; i++){
					if(main.getElementAt(i) is JobGradeComponent )
						JobGradeComponent(main.getElementAt(i)).demandAssessObj[flag].id = data;
				}
			}
			
			/**打分人*/
			public function set examiner(value:String):void
			{
				if(examinerInDB != "-1"){
					if(value != "-1"?value != examinerInDB:false)
						popWwarn(resetPersonProcess);
					if(personFlag)
						examinerInDB = value;
					else
						value = examinerInDB;
				}else
					_examiner = value;
				personFlag = false;				
				
				if(value != "" && value != "-1")
					resetEA("examiner", value);
			}

			/**被考评人*/
			public function set assessor(value:String):void
			{
				if(assessorInDB != "-1"){
					if(value != "-1"?value != assessorInDB:false)
						popWwarn(resetPersonProcess);
					if(personFlag)
						assessorInDB = value;
					else
						value = assessorInDB;
				}else
					_assessor = value;
				personFlag = false;		
				
				if(value != "" && value != "-1")
					resetEA("assessor", value);
			}

			/**弹出确认按钮panel弹出*/
			private function popWwarn(method:Function):void{
				TAlert.show("人员设置与以往不符，是否重置为当前设置人员？","人员重置",TAlert.OK|TAlert.NO,this,method,null,TAlert.YES);
			}
			
			/**是否重置人员*/
			private function resetPersonProcess(event:CloseEvent):void{
				if(event.detail == TAlert.OK)
					personFlag = true;
			}
			
			/**数据更改事件*/
			private function dataChangedHandler(event:Event):void{
				enableSaveBtn = true;
				msgShow.text = "评价变更，请保存！";
				var e:Event = new Event("someDataChanged");
				this.dispatchEvent(e);
			}
			
			/**数据库返回“考评对象集合后处理”*/
			private function initDemandAssess4JobGradesHandle(event:ResultEvent):void{
				var errorFlag:Boolean = true;
				var resultObj:Object = BugUtil.getResultObj(event);
				var resultArr:ArrayCollection = resultObj as ArrayCollection;
				
				var compArray:ArrayCollection = resultArr.getItemAt(1) as ArrayCollection;
				if(compArray != null && compArray.length > 0){
					for(var i:uint=0; i < compArray.length; i++){
						var comp:JobGradeComponent = new JobGradeComponent();
						var item:Object = compArray.getItemAt(i);
						var obj:Object = new Object();
						
						comp.addEventListener("dataChanged", dataChangedHandler);
						
						if(resultArr.getItemAt(0) == 1){
							//评分对象主键
							obj.assessID = item.hasOwnProperty("assessID")?item.assessID:-1;
							//需求分解表主键
							obj.subDemandID = item.hasOwnProperty("subDemandID")?item.subDemandID:-1;
							//被考评人
							if(item.hasOwnProperty("assessor")){
								var assessorObj:Object = new Object();
								assessorObj.id = item.assessor.id;
								assessorInDB = item.assessor.id;
								obj.assessor = assessorObj;
							}
							//分析环节、开发环节、单元测试环节、功能测试环节
							obj.demandLink = item.demandLink;
							//打分人
							if(item.hasOwnProperty("examiner")){
								var examinerObj:Object = new Object();
								examinerObj.id = item.examiner.id;
								examinerInDB = item.examiner.id;
								obj.examiner = examinerObj;
							}
							//分数
							obj.score = item.hasOwnProperty("score")?item.score:0;
							//打分说明
							obj.direction = item.hasOwnProperty("direction")?item.direction:"";
							
							var eh:Event = new Event("haveBeenData");
							dispatchEvent(eh);
						}else{
							//需求分解表主键
							obj.subDemandID = this.userDemand;
							//被考评人
							var assessorObj2:Object = new Object();
							assessorObj2.id = this._assessor;
							obj.assessor = assessorObj2;
							//分析环节、开发环节、单元测试环节、功能测试环节
							obj.demandLink = this.demandsLink;
							//打分人
							var examinerObj2:Object = new Object();
							examinerObj2.id = this._assessor;
							obj.examiner = examinerObj2;
							
							var en:Event = new Event("haveNoData");
							dispatchEvent(en);
						}
						//各个环节的打分指标
						if(item.hasOwnProperty("indicator")){
							var indicatorObj:Object = new Object();
							indicatorObj.id = item.indicator.id;
							indicatorObj.constDetailName = item.indicator.constDetailName;
							indicatorObj.remark = item.indicator.remark;
							obj.indicator = indicatorObj;
						}
						comp.demandAssessObj = obj;
						
						main.addElement(comp);
					}
					errorFlag = false;
				}
				
				if(errorFlag){
					msg.text = judgePrameterFlag();
					msg.text += "数据库异常，无考评指标信息！";
					msg.includeInLayout = true;
					msg.visible = true;
					mainGroup.includeInLayout = false;
					mainGroup.visible = false;
				}
			}
			
			/**是否设置组件必备参数：被考评人、打分人、需求服务单主键、考评环节、考评指标种类。*/
			private function judgePrameterFlag():String{
				var msg:String = "组件必备参数：";
				if(this._assessor == "-1" || this._assessor == "")
					msg += "被考评人（assessor）未设置！\n";
				if(this._examiner == "-1" || this._examiner == "")
					msg += "打分人（examiner）未设置！\n";
				if(userDemand == "-1" || userDemand == "")
					msg += "需求服务单主键（userDemand）未设置！\n";
				if(demandsLink == "-1" || demandsLink == "")
					msg += "考评环节（demandsLink）未设置！\n";
				if(jobGradeType == "-1" || jobGradeType == "")
					msg += "考评指标种类（jobGradeType）未设置！\n";
				if(msg.length > 7){
					this.msg.text = msg;
					this.msg.includeInLayout = true;
					this.msg.visible = true;
					mainGroup.includeInLayout = false;
					mainGroup.visible = false;
					return msg;
				}
				return "";
			}
			
			/**将组件中的评价存入数据库*/
			public function addAssesses2DB():void{
				
				var flag:Boolean = false;
				var assesses:ArrayCollection = new ArrayCollection();
				for( var i:uint; i < main.numElements; i++){
					if(main.getElementAt(i) is JobGradeComponent )
//						JobGradeComponent(main.getElementAt(i)).save2database();
						assesses.addItem(JobGradeComponent(main.getElementAt(i)).createObj4DB());
				}
				if(assesses.length > 0)
					appCore.dealData("demandManagerAPI","DemandManagerAPI","addAssesses",
						[appCore.jsonEncoder.encode(assesses)],function(event:ResultEvent):void{
							var resultObj:Object = BugUtil.getResultObj(event);
							if(resultObj == "1"){
								var e:Event = new Event("assessSaved");
								dispatchEvent(e);
								enableSaveBtn = false;
								TAlert.show("评分成功！","温馨提示");
							}
						},false);
			}
			
			private function saveBtn_clickHandler(event:MouseEvent):void{
				addAssesses2DB();
			}
			
			/**组件初始化*/
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
//				this.addEventListener("initData",initData);
				initData();
			}
			
			/**加载子组件*/
			private function initData():void{
//				if(judgePrameterFlag()){
					//根据“考评指标种类”加载数据库中的考评指标对象集合
					if(jobGradeType != ""){
						appCore.dealData("demandManagerAPI","DemandManagerAPI","initDemandAssess4JobGrades",
							[jobGradeType,demandsLink,userDemand],initDemandAssess4JobGradesHandle,false);
					}else{
						msg.text = "请为组件的“jobGradeType（指标类型）”属性赋值！";
						msg.includeInLayout = true;
						msg.visible = true;
						mainGroup.includeInLayout = false;
						mainGroup.visible = false;
					}
				}
//			}
			
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%">
		<s:Label id="msg" 
				 color="red" 
				 textAlign="center"
				 fontWeight="bold" fontSize="30"
				 width="100%" height="100%"
				 text="数据库异常，无考评指标信息！"
				 visible="false"
				 includeInLayout="false"/>
		<s:VGroup id="mainGroup" width="100%" height="100%">
			<s:HGroup width="100%" height="1%" includeInLayout="{enableSaveBtn}">
				<s:Button id="saveBtn" width="75" height="25" label="保存"
						  click="saveBtn_clickHandler(event)" cornerRadius="5"
						  visible="{enableSaveBtn}"
						  enabled="{enableSaveBtn}"
						  icon="@Embed(source='assets/img/icon/save.png')"/>
				<s:Label id="msgShow" 
						 text="{showMsg}" 
						 visible="{enableSaveBtn}"
						 width="93.5%" height="100%" 
						 color="red" fontWeight="bold" 
						 verticalAlign="middle"/>
			</s:HGroup>
			<s:Scroller width="100%" height="99%">
				<s:VGroup width="100%" height="100%"
						  id="main">
				</s:VGroup>
			</s:Scroller>
		</s:VGroup>
	</s:VGroup>
</s:Group>
