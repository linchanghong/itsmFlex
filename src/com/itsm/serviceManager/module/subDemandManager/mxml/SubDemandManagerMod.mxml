<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:control="com.framelib.control.*"
		  xmlns:flow="com.itsm.flow.base.*"
		  xmlns:container="com.framelib.container.*"
		  xmlns:comp="com.itsm.serviceManager.component.*"
		  xmlns:mxml="com.itsm.common.mxml.*"
		  xmlns:bugmxml="com.itsm.serviceManager.common.mxml.*"
		  width="100%" height="100%" creationComplete="initPage(event)">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:StringValidator id="analysisDateV" property="text" required="true"
							minLength="10" maxLength="10"
							requiredFieldError="日期格式：YYYY-MM-DD" source="{analysisDate}"/> 
		<mx:StringValidator id="developDateV" property="text" required="true"
							minLength="10" maxLength="10"
							requiredFieldError="日期格式：YYYY-MM-DD" source="{developDate}"/> 
		<mx:StringValidator id="unitTestDateV" property="text" required="true"
							minLength="10" maxLength="10"
							requiredFieldError="日期格式：YYYY-MM-DD" source="{unitTestDate}"/> 
		<mx:StringValidator id="functionalTestDateV" property="text" required="true"
							minLength="10" maxLength="10"
							requiredFieldError="日期格式：YYYY-MM-DD" source="{functionalTestDate}"/>
		<mx:StringValidator id="subDemandTitleV" minLength="1" property="text"
							requiredFieldError="主题摘要不少于一字！" source="{subDemandTitle}"/>
		<mx:StringValidator id="subDemandDirectionV" minLength="2" property="text"
							requiredFieldError="需求描述不少于两字！" source="{subDemandDirection}"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.itsm.common.utils.AppCore;
			import com.itsm.serviceManager.module.bugManager.code.BugUtil;
			import com.itsm.flow.app.GlobalUtil;
			
			import common.utils.TAlert;
			
			import mx.collections.ArrayCollection;
			import mx.controls.DateField;
			import mx.effects.Fade;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.formatters.DateFormatter;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			import spark.filters.GlowFilter;
			
			//流程挂载页面必需属性--用于存储业务id
			[Bindable]
			public var billId:String;
			//流程模型
			public var oprtTypeId:String;
			//请求单所在数据库表名
			[Bindable]
			public var applyTableName:String = "T_USER_APPLY";
			//子需求单业务数据表格
			[Bindable]
			public var subDemandTableName:String = "T_DEMANDS_PART";
			//流程模型类型
			private static const FLOW_TYPE:String="6";
			//审批意见
			[Bindable]
			public var opinion:String;
			//提醒消息
			[Bindable]
			public var fadeMsg:String;
			//工具类
			private var appCore:AppCore=AppCore.getInstance();
			//呈报使用
			private var FAppCore:GlobalUtil = GlobalUtil.getInstence();
			//主需求业务单对象
			[Bindable]
			public var userApply:Object;
			//呈报对象
			[Bindable]
			private var putObj:Object;
			//子需求单
			[Bindable]
			public var subDemandObj:Object;
			//当前时间--主要用于“计划完成时间选择控制”
			[Bindable]
			private var now:Date = new Date();
			//表单是否有效 
			[Bindable] 
			private var formIsValid:Boolean = false;
			//表单是否为空 
			[Bindable] 
			public var formIsEmpty:Boolean = true; 
			//呈报按钮是否有效
			[Bindable]
			private var enablePutBtn:Boolean = true;
			//保存按钮是否有效
			[Bindable]
			private var enableSaveBtn:Boolean = false;
			//闪烁使用的filter
			[Bindable]
			private var filter:GlowFilter = new spark.filters.GlowFilter();
			//默认情况下选择不同意(发布事件)
			[Bindable]
			private var FlowBillModi:Event;
			//持有该目前集中控制的对象。 
			private var focussedFormControl:DisplayObject; 
			//用于自动取消显示保存后的提示信息
			private var timer:Timer;
			//已选择开发经理名称
			[Bindable]
			private var developerManagerName:String;
			//作用范围
			[Bindable]
			public var scops:ArrayCollection;
			//重要程度
			[Bindable]
			public var levels:ArrayCollection;
			//当前系统id
			[Bindable]
			private var sysID:int = -1;
			
			
			/**公共方法，用于调用服务器端相应的方法处理*/
			private function handle_server_method(
				componentName:String, className:String, methodName:String, arguments:Array, handleName:Function):void{
				
				appCore.dataDeal.dataRemote(componentName,className,methodName,arguments);
				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT, handleName);
			}
			
			/**将远程服务器返回的数据进行处理*/
			private function getResultObj(event:ResultEvent):Object{
				var resultStr:String = event.result.toString();	
				
				trace("流程:远程服务器返回的数据为："+resultStr);
				
				return appCore.jsonDecoder.decode(resultStr);
			}
			
			/**闪烁提示方法*/
			private var fade:Fade;
			private function showAndHideLabel(isshow:Boolean):void{
				if (isshow){
					lbBeforeSave.width=220;
					lbBeforeSave.visible = true;
					if (!fade){
						fade = new Fade();
						fade.target = lbBeforeSave;
						fade.repeatCount=0;
						fade.repeatDelay=100;
						fade.alphaTo=0;
					}
					fade.play();
				}else{
					lbBeforeSave.width=0;
					lbBeforeSave.visible = false;
					if (fade){
						fade.end();
						fade.stop();
					}
				}
			}
			
			/**挂载页面初始化*/
			public function initPage(event:FlexEvent):void{
				
				handle_server_method("demandManagerAPI","DemandManagerAPI","showSubDemandByID",
					[billId], loadSubDemandInfo);
				
				//3、初始化4个下拉列表
				BugUtil.handle_server_method("bugManagerAPI","BugManagerAPI","initDropDownList4AddPage",
					[], initDropDownList4AddPageHandle);
				
				FlowBillModi = new Event("FlowBillModi");
				this.dispatchEvent(FlowBillModi);
				
				//				flowTodoWindow = new FlowTodoWindow();
				this.addEventListener("willAgreeEvent",doWillAgreeeEventHandle);
				
			}
			
			private function initDropDownList4AddPageHandle(event:ResultEvent):void{
				var list:ArrayCollection;
				//后台传来数据的暂存
				list = BugUtil.getResultObj(event) as ArrayCollection;
				//分类存储
				//作用范围
				scops = list.getItemAt(0) as ArrayCollection;
				//重要程度
				levels = list.getItemAt(2) as ArrayCollection;
			}
			
			private function loadSubDemandInfo(event:ResultEvent):void{
				var obj:Object = getResultObj(event);
				if(obj != "0")
					subDemandObj = obj;
				handle_server_method("demandManagerAPI","DemandManagerAPI","showDemand4FlowByID",
					[subDemandObj.userApplyId], loadDemand4FlowInfoInfo);
			}
			
			/**当需要控制流程页面的“同意”、“不同意”按钮时，可以用该方法设置提示信息*/
			private function giveMsg(opinion:String, fadeMsg:String):void{
				this.opinion = opinion;
				this.fadeMsg = fadeMsg;
			}
			
			/**初始化处理方法查询请求单后返回数据处理方法*/
			private function loadDemand4FlowInfoInfo(event:ResultEvent):void{
				var obj:Object = getResultObj(event);
				if(obj != "0")
					userApply = obj;
				sysID = (userApply != null && userApply.hasOwnProperty("belongSystem"))
					?userApply.belongSystem.systemID:-1;
				developerManagerName = userApply.developManager.userName;
				//加载该需求单的流程进度记录
				AppHistoryGrid.gridMain.OnlyInit();
				AppHistoryGrid.getApproveHistory(oprtTypeId, billId);
				
				//判断当前主需求单是否可以修改“开发经理”与“计划完成时间”
				handle_server_method("demandManagerAPI","DemandManagerAPI","judgeAllSubDemandsIsSubmit",
					[billId], judgeAnySubDemandsIsSubmitHandle);
			}
			
			/**根据返回的子需求单状态为“0”的数量与主需求单中的子需求单总数做比较：如果相同则可以修改*/
			private function judgeAnySubDemandsIsSubmitHandle(event:ResultEvent):void{
				var obj:Object = getResultObj(event);
				if(obj == userApply.subDemandCount){
					//判断页面必填字段是否为空
					//					formIsEmpty = planFinishDate.text == "" ; 
					//						developmentManager.sText == "";
					if(formIsEmpty)
						showAndHideLabel(!formIsValid);
				}
			}
			
			/**将要同意*/
			public function doWillAgreeeEventHandle(event:Event):void{}
			
			/**向数据库存入数据,并且设置流程"可通过"*/
			protected function saveBtn_click_handle(event:MouseEvent):void{
				if(formIsValid && !formIsEmpty){
					BugUtil.handle_server_method("demandManagerAPI","DemandManagerAPI","updateSubDemandUserApply",
						[appCore.jsonEncoder.encode(createObject4Save())], saveBtn_clickHandle);
				}else
					TAlert.show("输入有误,请查看页面提示信息!","温馨提示");
			}
			//保存请求单的回调函数
			private function saveBtn_clickHandle(event:ResultEvent):void{
				var obj:Object = BugUtil.getResultObj(event);
				
					if(obj == "0"){
						TAlert.show("系统繁忙，请稍后再试！","温馨提示");
						return;
					}else if(obj == "1"){
						//呈报按钮激活,保存按钮置灰
						enablePutBtn = true;
						msg.text = "亲，可以呈报哦！";
						//保存按钮置灰
						enableSaveBtn = false;
						
						FlowBillModi = new Event("FlowBillSave");
						this.dispatchEvent(FlowBillModi);
					}
			}
			/**
			 * 同意后处理结果
			 */
			public function flowResult():void{
				appCore.dataDeal.dataRemote("bugManagerAPI","BugManagerAPI","updateUerApplyStatusNoDataBack",[billId, 3]);
				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT, flowHanelResult);
			}
			
			/**
			 * 同意处理前调用
			 */
			public function agreeBefore():void{}
			
			private function beforeHandle(event:ResultEvent):void{
				
			}
			
			
			private function flowHanelResult(event:ResultEvent):void {
				TAlert.show("数据生效");
			}
			
			/**
			 * 不同意后处理结果
			 */
			public function disagree():void{}
			
			private function disagreeResult(event:ResultEvent):void {
				//TAlert.show("数据生效");
			}
			
			/**向数据库存入页面修改数据后的处理*/
			private function modifyDemand4DemandFlowHandle(event:ResultEvent):void{
				var obj:Object = getResultObj(event);
				if(obj == "1"){
					//					developmentManager.sText = developerManagerName;
					msg.text = "保存成功！";
					msg.visible = true;
				}else{
					msg.text = "系统繁忙，稍后再试！";
					msg.visible = true;
				}
				timer = new Timer(3000, 1);
				timer.addEventListener(TimerEvent.TIMER,deferredMethod);
				timer.start();
			}
			
			/**呈报按钮点击后将*/
			private var FISAfterFlowCommit:Boolean=false;
			protected function putBtn_clickHandler(event:MouseEvent):void
			{
				var item:Object = subDemandObj;
				if(item==null)
					TAlert.show("系统繁忙，稍后再试！", "温馨提示");
				else{
					if(item.demandStatus == 0){
						putObj = item;
						//呈报的具体业务处理
						var arr:Array = new  Array();
						var Oitem:String= "department:"+FAppCore.FCusUser.DeptId;
						arr.push(Oitem);
						
						var sender:Object = new Object();
						sender.id=FAppCore.FCusUser.UserId;
						sender.personName=FAppCore.FCusUser.UserName;
						//		fAppCore.StartFlowInstence(sender, item.applyEntry.id, FLOW_TYPE, item.applyId, arr, FISAfterFlowCommit, putBtn_clickHandle);
						FAppCore.StartFlowInstence(sender, sender.id, FLOW_TYPE, putObj.userDemandId, arr, FISAfterFlowCommit, putBtn_clickHandle);
					}else
						TAlert.show("限于“未提交”可呈报","温馨提示");
				}
			}
			
			/**当流程创建成功后，修改子需求单的状态为“1”*/
			private function putBtn_clickHandle(event:ResultEvent):void{
				
				//修改数据库请求单的状态
				//需求状态，0：未提交，1：需求分析，2：开发经理指派人员，3：开发，4：单元测试，5：功能测试，6：项目经理审核，7：完成
				putObj.demandStatus = 1;
				putObj.status = "需求分析";
				
				BugUtil.handle_server_method("demandManagerAPI","DemandManagerAPI","updateSubDemandStatusNoDataBack",
					[putObj.userDemandId, putObj.demandStatus], after_putBtn_clickHandle);
			}
			
			private function after_putBtn_clickHandle(event:ResultEvent):void{
				var obj:Object = BugUtil.getResultObj(event);
				if(obj == 0)
					putBtn_clickHandle(null);
				if(obj == 1){
					enablePutBtn = false;
				}
			}
			
			/**取消显示隐藏信息*/
			private function deferredMethod(event:TimerEvent):void{
				msg.visible = false;
			}
			
			/**将页面值封装到对象里*/
			public function createObject4Save():Object{
				var obj:Object = new Object();
				
				//start==================================================================
				//对象处理:subDemand模块,subDemand系统,subDemand影响范围,subDemand重要程度
				var module:Object = new Object();
				if(userApply != null)
					module.moduleID = userApply.sysModule.moduleID;
				obj.belongsBusiness = module;
				
				var system:Object = new Object();
				if(userApply != null)
					system.systemID = userApply.belongSystem.systemID;
				obj.belongsSystem = system;
				
				var range:Object = new Object();
				if(subDemandRange.selectedItem != null)
					range.id = subDemandRange.selectedItem.id;
				obj.range = range;
				
				var urgent:Object = new Object();
				if(subDemandUrgent.selectedItem != null)
					urgent.replyLevelId = subDemandUrgent.selectedItem.replyLevelId;
				obj.urgent = urgent;
				
				//服务单填写者--项目经理
				var sponsor:Object = new Object();
				sponsor.id = appCore.loginUser.id;
				sponsor.personId = appCore.loginUser.msPerson.id;
				sponsor.companyID = appCore.loginUser.companyId;
				obj.sponsor = sponsor;
				
				//开发经理
				var developManager:Object = new Object();
				developManager.id = subDemandObj!=null?subDemandObj.developManager.id
					:userApply!=null?userApply.developManager.id:-1;
				obj.developManager = developManager;
				
				//需求人员
				var analyst:Object = new Object();
				analyst.id = 
					subDemandAnalyst.selectObj.hasOwnProperty("userId")
					?subDemandAnalyst.selectObj.userId:subDemandObj.analyst.id;
				obj.analyst = analyst;
				
				//功能测试人员--需求人员
				obj.funcTester = analyst;
				
				//时间处理
				applyDateHandle(obj);
				
				//主题摘要
				obj.demandTitle = subDemandTitle.text;
				//需求描述
				obj.directions = subDemandDirection.text;
				
				//主需求单id
				if(userApply != null)
					obj.userApplyId = userApply.applyId;
				//状态
				obj.demandStatus = 0;
				//是否删除
				obj.dr = 0;
				
				//子需求单主键id
				obj.userDemandId = subDemandObj.userDemandId;
				//===================================================================end
				
				return obj;
			}
			
			/**时间处理*/
			private function applyDateHandle(apply:Object):void{
				
				var df:DateFormatter = new DateFormatter();
				df.formatString="YYYY-MM-DD";
				
				//子需求发起时间
				apply.initDate = df.format(new Date());
				//项目经理填写预计需求分析完成时间
				if(analysisDate.selectedDate != null)
					apply.planAnalysisDate = df.format(analysisDate.selectedDate);
				//项目经理填写预计开发完成时间
				if(developDate.selectedDate != null)
					apply.planDevelopDate = df.format(developDate.selectedDate);
				//项目经理填写预计单元测试完成时间
				if(unitTestDate.selectedDate != null)
					apply.planUtestDate = df.format(unitTestDate.selectedDate);
				//项目经理填写预计功能测试完成时间
				if(functionalTestDate.selectedDate != null)
					apply.planFtestDate = df.format(functionalTestDate.selectedDate);
				
			}
			
			/**验证方法*/
			private function validateForm(event:Event):void  
			{                     
				//检查验证传递和返回一个布尔值相应。 
				//保存引用当前集中表单控件 
				//这样isValid()辅助方法可以只通知 
				//当前集中形式控制和不影响 
				//任何其他的表单控件。 
				focussedFormControl = event.target as DisplayObject;   
				
				// 标记表单有效的开始 
				judgeFormIsValid();
				
				// 检查表单是否为空 
				judgeFormIsEmpty();
				
				/*运行每个验证器反过来,使用isValid() 
				辅助方法和更新formIsValid的价值 
				因此。 */
				BugUtil.validate(analysisDateV,formIsValid,focussedFormControl);
				BugUtil.validate(developDateV,formIsValid,focussedFormControl);
				BugUtil.validate(unitTestDateV,formIsValid,focussedFormControl);
				BugUtil.validate(functionalTestDateV,formIsValid,focussedFormControl);
				BugUtil.validate(subDemandTitleV,formIsValid,focussedFormControl);
				BugUtil.validate(subDemandDirectionV,formIsValid,focussedFormControl);
				
				//闪烁提示
				if(formIsEmpty)
					showAndHideLabel(!formIsValid);
				if(!formIsEmpty && !formIsValid){
					msg.text = "阶段计划完成时间有误！";
					msg.visible = true;
				}else
					msg.visible = false;
				
				if(formIsEmpty){
					showAndHideLabel(!formIsValid);
				}else
					showMsg();
				
				if(formIsValid && !formIsEmpty)
					enableSaveBtn = true;
				else
					enableSaveBtn = false;
			} 
			
			/**“add”与“mod”状态都需要调用*/
			private function showMsg():void{
				if(formIsEmpty){
					msg.text = "带“*”项以及“需求描述”为必填项！";
					msg.visible = true;
				}else{
					if(formIsValid){
						msg.text = "亲，可以保存!";
						msg.visible = true;
						enablePutBtn = false;
					}else{
						msg.text = "阶段计划完成时间或需求描述有误！";
						msg.visible = true;	
					}
				}
			}
			
			/**判断表单是否为空：任一为空即为空*/
			private function judgeFormIsEmpty():void{
				//判断页面必填字段是否为空
				var flag:Boolean = !subDemandAnalyst.selectObj.hasOwnProperty("userId") && 
					!subDemandAnalyst.selectObj.hasOwnProperty("id");
				formIsEmpty = flag || 
					subDemandUrgent.selectedItem == undefined || 
					subDemandRange.selectedItem == undefined || 
					analysisDate.selectedDate == null || 
					developDate.selectedDate == null || 
					unitTestDate.selectedDate == null || 
					functionalTestDate.selectedDate == null || 
					subDemandTitle.text == "" || 
					subDemandDirection.text == "";
			}
			/**判断表单是否有效*/
			private function judgeFormIsValid():void{
				var obj:Object = new Object();
				obj = subDemandAnalyst.selectObj;
				var flag:Boolean = obj.hasOwnProperty("userId")||obj.hasOwnProperty("id");
				formIsValid = subDemandUrgent.selectedItem != undefined && 
					subDemandRange.selectedItem != undefined && 
					analysisDate.selectedDate != null && 
					developDate.selectedDate != null && 
					unitTestDate.selectedDate != null && 
					functionalTestDate.selectedDate != null && 
					analysisDate.selectedDate <= developDate.selectedDate && 
					developDate.selectedDate <= unitTestDate.selectedDate && 
					unitTestDate.selectedDate <= functionalTestDate.selectedDate && 
					subDemandTitle.text != "" && 
					subDemandDirection.text != "" && 
					flag;
			}
			
			/** 
			 *  清除验证信息 重置功能 
			 * */ 
			private function clearFormHandler():void 
			{ 
				//表单字段清空
				//判断页面必填字段是否为空
				subDemandAnalyst.selectObj = new Object();
				subDemandAnalyst.sText = "";
				subDemandUrgent.selectedItem = undefined;
				subDemandRange.selectedItem = undefined;
				analysisDate.selectedDate = null;
				developDate.selectedDate = null;
				unitTestDate.selectedDate = null;
				functionalTestDate.selectedDate = null;
				subDemandTitle.text = "";
				subDemandDirection.text = "";
				// 标记为清空 
				formIsEmpty = true; 
			} 
			
			
			//点击修改界面的作用范围下拉列表时调用==========作用范围
			protected function demandRange_clickHandler(event:MouseEvent):void
			{
				//先查看demandScops是否为null，为null再向服务器请求数据
				if(scops == null){
					BugUtil.handle_server_method("bugManagerAPI","BugManagerAPI","initBugScope",
						[], demandRange_clickHandle);
				}else{
					subDemandRange.dataProvider = scops;
				}
				//	//由于界面值有修改,so--将呈报按钮置灰,保存按钮激活
				//	enablePutBtn = false;
			}
			
			//点击修改界面的作用范围下拉列表后从后台传入的数据的处理
			private function demandRange_clickHandle(event:ResultEvent):void{
				scops = BugUtil.getResultObj(event) as ArrayCollection;
				subDemandRange.dataProvider = scops;
			}
			//点击修改界面的demand来源下拉列表时调用==========重要程度
			protected function demandUrgent_clickHandler(event:MouseEvent):void
			{
				//先查看levels是否为null，为null再向服务器请求数据
				if(levels == null){
					BugUtil.handle_server_method("bugManagerAPI","BugManagerAPI","initLevels",
						[], demandUrgent_clickHandle);
				}else{
					subDemandUrgent.dataProvider = levels;
				}
				//	//由于界面值有修改,so--将呈报按钮置灰,保存按钮激活
				//	enablePutBtn = false;
			}
			
			//点击修改界面的demand来源下拉列表后从后台传入的数据的处理
			private function demandUrgent_clickHandle(event:ResultEvent):void{
				levels = BugUtil.getResultObj(event) as ArrayCollection;
				subDemandUrgent.dataProvider = levels;
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%">
		
		<s:HGroup id="buttonGroup" width="100%" height="25" minHeight="15">
			<s:Button id="saveBtn" width="75" height="100%" label="保存"
					  click="saveBtn_click_handle(event)" enabled="{enableSaveBtn}"
					  icon="@Embed(source='assets/img/icon/save.png')"/>
			<s:Label id="lbBeforeSave" visible="{!formIsValid == formIsEmpty}" width="0"
					 height="100%" filters="{filter}" text="↙红色字段为必填项！" verticalAlign="top"/>
			<s:Button id="putBtn" 
					  width="75" height="100%" 
					  label="呈报"
					  enabled="{enablePutBtn}"
					  click="putBtn_clickHandler(event)" cornerRadius="2"
					  icon="@Embed(source='assets/img/icon/report.png')"/>
			<s:Label id="msg" visible="false" width="10%" height="100%" color="red" fontWeight="bold"
					 text="保存成功!"/>
		</s:HGroup>
		<s:Scroller width="100%" height="100%">
			<s:VGroup width="100%" height="100%">
				<mx:VDividedBox width="100%" height="100%" minHeight="700" creationPolicy="all"
								paddingBottom="5" paddingLeft="5" paddingRight="5">	
					
					<s:VGroup id="top" width="100%" height="35%">
						<container:GroupBox width="100%" height="100%" title="添加需求服务单">
							<s:HGroup width="100%" height="25">
								
								<control:FormLabel width="20%" height="100%" label="需求人员：" required="true"
												   textAlign="right"/>
								<bugmxml:BugFieldSelect id="subDemandAnalyst" width="25%" height="100%"
														armTitleWindow="com.itsm.serviceManager.common.selectWindow.user.SelectUser"
														isMultipleSelected="false"
														sysID="{sysID}"
														userStatus="202"
														selectChange="validateForm(event)"
														sText="{subDemandObj!=null?subDemandObj.analyst.userName:''}"
														textAlign="left"/>
								
								<control:FormLabel width="20%" height="100%" label="重要程度：" required="true"
												   textAlign="right" verticalAlign="middle"/>
								<s:ComboBox id="subDemandUrgent" width="25%" height="100%"
											dataProvider="{BugUtil.getArrayListFromObject(subDemandObj.urgent)}"
											change="validateForm(event)"
											click="demandUrgent_clickHandler(event)"
											initialize="subDemandUrgent.textInput.editable=false"
											labelField="levelNameString" requireSelection="true"
											selectedIndex="0" textAlign="left"/>
								
								<control:FormLabel width="20%" height="100%" label="影响范围：" required="true"
												   textAlign="right" verticalAlign="middle"/>
								<s:ComboBox id="subDemandRange" width="25%" height="100%"
											dataProvider="{BugUtil.getArrayListFromObject(subDemandObj.range)}"
											change="validateForm(event)"
											click="demandRange_clickHandler(event)"
											initialize="subDemandRange.textInput.editable=false"
											labelField="constDetailName" requireSelection="true"
											selectedIndex="0" textAlign="left"/>
								
							</s:HGroup>
							
							<s:HGroup width="100%" height="25">
								
								<s:Label width="20%" height="100%" text="所属系统："
												   textAlign="right" verticalAlign="middle"/>
								<s:TextInput width="25%" height="100%" editable="false"
											 text="{subDemandObj.belongsSystem.systemName}" textAlign="left"/>
								
								<s:Label width="20%" height="100%" text="所属业务："
										 textAlign="right" verticalAlign="middle"/>
								<s:TextInput width="25%" height="100%" editable="false"
											 text="{subDemandObj.belongsBusiness.moduleName}" textAlign="left"/>
								
								<control:FormLabel width="20%" height="100%" label="预计需求分析完成时间："
												   required="true" textAlign="right" verticalAlign="middle"/>
								<control:DateFieldFl id="analysisDate" 
													 width="25%" height="100%" 
													 formatString="YYYY-MM-DD"
													 textAlign="left"
													 editable="false"
													 yearNavigationEnabled="true"
													 disabledRanges="{[ {rangeEnd: new Date(now.fullYear, now.month, now.date-1)}]}"
													 change="validateForm(event);"
													 selectedDate="{DateField.stringToDate(subDemandObj.planAnalysisDate,'YYYY-MM-DD')}"/>
								
							</s:HGroup>
							
							<s:HGroup width="100%" height="25">
								
								<control:FormLabel width="20%" height="100%" label="预计开发完成时间："
												   required="true" textAlign="right" verticalAlign="middle"/>
								<control:DateFieldFl id="developDate" 
													 width="25%" height="100%" 
													 formatString="YYYY-MM-DD"
													 textAlign="left"
													 editable="false"
													 yearNavigationEnabled="true"
													 disabledRanges="{[ {rangeEnd: new Date(now.fullYear, now.month, now.date-1)}]}"
													 change="validateForm(event);"
													 selectedDate="{DateField.stringToDate(subDemandObj.planDevelopDate,'YYYY-MM-DD')}"/>
								
								<control:FormLabel width="20%" height="100%" label="预计单元测试完成时间："
												   required="true" textAlign="right" verticalAlign="middle"/>
								<control:DateFieldFl id="unitTestDate" 
													 width="25%" height="100%"
													 formatString="YYYY-MM-DD"
													 textAlign="left"
													 editable="false"
													 yearNavigationEnabled="true"
													 disabledRanges="{[ {rangeEnd: new Date(now.fullYear, now.month, now.date-1)}]}"
													 change="validateForm(event);"
													 selectedDate="{DateField.stringToDate(subDemandObj.planUtestDate,'YYYY-MM-DD')}"/>
								
								<control:FormLabel width="20%" height="100%" label="预计功能测试完成时间："
												   required="true" textAlign="right" verticalAlign="middle"/>
								<control:DateFieldFl id="functionalTestDate" 
													 width="25%" height="100%"
													 formatString="YYYY-MM-DD"
													 textAlign="left"
													 editable="false"
													 yearNavigationEnabled="true"
													 disabledRanges="{[ {rangeEnd: new Date(now.fullYear, now.month, now.date-1)}]}"
													 change="validateForm(event);"
													 selectedDate="{DateField.stringToDate(subDemandObj.planFtestDate,'YYYY-MM-DD')}"/>
								
							</s:HGroup>
							
							<s:HGroup width="100%" height="25">
								<control:FormLabel width="14.5%" height="100%" label="主题摘要：" required="true"/>
								<s:TextInput id="subDemandTitle" 
											 width="85.5%" height="100%" 
											 change="validateForm(event)"
											 text="{subDemandObj != null ? subDemandObj.demandTitle : ''}" 
											 textAlign="left"/>
							</s:HGroup>
							
							<s:HGroup width="100%" height="40%">
								<control:FormLabel width="14.5%" height="100%" label="需求描述：" required="true"
												   verticalAlign="middle"/>
								<s:TextArea id="subDemandDirection" 
											width="85.5%" height="100%"
											change="validateForm(event)"
											editable="true" 
											text="{subDemandObj!=null?subDemandObj.directions:''}" 
											textAlign="left" 
											verticalAlign="middle"/>
							</s:HGroup>
							
						</container:GroupBox>
					</s:VGroup>	
					<s:VGroup id="center" width="100%" height="35%" paddingTop="5">
						<mx:TabNavigator id="infoList" width="100%" height="100%" focusColor="#58F0C0"
										 selectedIndex="0">
							
							<s:NavigatorContent id="bugDirBtn" width="100%" height="100%" label="需求服务单附件">
								<mxml:UploadDocumentsInfo id="subDemandFileGrid" width="100%"
														  height="100%"
														  attachMentsArr="{subDemandObj.attachments}"
														  busDataId="{billId}" 
														  busTableName="{subDemandTableName}"/>
							</s:NavigatorContent>
							
							<s:NavigatorContent id="bugTypeBtn" width="100%" height="100%" label="客户需求信息">
								<s:Scroller width="100%" height="100%">
									<s:VGroup width="100%" height="100%">
										<mx:VDividedBox width="100%" height="100%" minHeight="400">
											<s:VGroup width="100%" height="40%">
												<s:HGroup width="100%" height="20%" paddingTop="2">
													<s:Label width="10%" height="100%" text="开发经理：" textAlign="right"/>
													<s:TextInput id="developmentManagerInput"
																 width="20%" height="100%" editable="false"
																 text="{developerManagerName}"
																 textAlign="left"/>
													
													<s:Label width="10%" height="100%" text="计划完成时间："
															 textAlign="right"/>
													<s:TextInput width="20%" height="100%" editable="false"
																 text="{userApply!=null?userApply.planFinishTime:''}"
																 textAlign="left"/>
												</s:HGroup>
												
												<s:HGroup width="100%" height="20%" paddingTop="2">
													<s:Label width="10%" height="100%" text="子需求单总数："
															 textAlign="right"/>
													<s:TextInput id="subDemandCount" width="20%" height="100%"
																 editable="false"
																 text="{userApply!=null?userApply.subDemandCount+'':'0'}"/>
													<s:Label width="10%" height="100%" text="子需求单完成数："
															 textAlign="right"/>
													<s:TextInput id="subDemandFinishedCount" width="20%"
																 height="100%" editable="false"
																 text="{subDemandCount.text!='0'?userApply.subDemandCompletedCount+'':'0'}"/>
													<s:Label width="10%" height="100%" text="子需求单剩余数："
															 textAlign="right"/>
													<s:TextInput id="subDemandRemainingCount" width="20%"
																 height="100%" editable="false"
																 text="{subDemandCount.text=='0'?'0':userApply.subDemandCount-userApply.subDemandCompletedCount}"/>
												</s:HGroup>
												
												<s:HGroup width="100%" height="60%" paddingTop="2">
													<s:Label width="10%" height="100%" text="客户需求内容："
															 textAlign="right"/>
													<s:TextArea id="userDemandContent" width="90%" height="100%"
																editable="false" text="{userApply.directions}"/>
												</s:HGroup>
											</s:VGroup>	
											<container:GroupBox title="文档附件"
																width="100%" height="60%">
												<mxml:UploadDocumentsInfo id="demandFileGrid" width="100%" height="100%"
																		  attachMentsArr="{userApply.attachments}"
																		  busDataId="{billId}" 
																		  busTableName="{applyTableName}"/>
											</container:GroupBox>
										</mx:VDividedBox>
									</s:VGroup>
								</s:Scroller>
							</s:NavigatorContent>
							
						</mx:TabNavigator>
					</s:VGroup>
					
					<s:HGroup id="bottom" width="100%" height="30%" paddingTop="5">
						<container:GroupBox width="100%" height="100%" title="客户需求单进度">
							<flow:ComApproveHistory id="AppHistoryGrid" width="100%" height="100%"/>
						</container:GroupBox>
					</s:HGroup>
				</mx:VDividedBox>
			</s:VGroup>
		</s:Scroller>
	</s:VGroup>
</s:Module>
