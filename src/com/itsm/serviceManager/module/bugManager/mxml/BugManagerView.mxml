<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:flow="com.itsm.flow.base.*"
		  xmlns:container="com.framelib.container.*"
		  xmlns:control="com.framelib.control.*"
		  xmlns:bugmxml="com.itsm.serviceManager.common.mxml.*"
		  xmlns:mxml="com.itsm.common.mxml.*"
		  width="100%" height="100%"
		  creationComplete="init(event)">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
			<mx:StringValidator   
				id="planFinishDateV"  
				source="{planFinishDate}"   
				property="text"
			    requiredFieldError="日期格式：YYYY-MM-DD"
				/>  
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.adobe.serializers.json.JSONDecoder;
			import com.adobe.serializers.json.JSONEncoder;
			import com.itsm.common.utils.AppCore;
			import com.itsm.flow.app.GlobalUtil;
			import com.itsm.flow.base.launch.FlowTodoWindow;
			import com.itsm.flow.events.ReloadFlowtodoEvent;
			import com.itsm.serviceManager.module.bugManager.code.BugUtil;
			
			import common.utils.TAlert;
			
			import mx.collections.ArrayCollection;
			import mx.controls.DateField;
			import mx.core.FlexGlobals;
			import mx.effects.Fade;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			import mx.validators.Validator;
			
			import spark.filters.GlowFilter;
			
			[Bindable]
			public var billId:String;
			public var oprtTypeId:String;
			
			private var appCore:AppCore=AppCore.getInstance();
			private var FAppCore:GlobalUtil = GlobalUtil.getInstence();
			
			//当前时间
			[Bindable]
			private var now:Date = new Date();
			
			[Bindable]
			public var userApply:Object;
			
			//请求单所在数据库表名
			[Bindable]
			public var applyTableName:String = "T_USER_APPLY";
			
			//默认情况下选择不同意(发布事件)
			[Bindable]
			private var FlowBillModi:Event;
			
			//呈报按钮是否显示
			[Bindable]
			private var isPutButtonView:Boolean = false;
			
			private var flowTodoWindow:FlowTodoWindow;
			
			//流程模型类型
			[Bindable]
//			private static const FLOW_TYPE:String = "2";
			private var flowType:String = "2";
			
			//持有该目前集中控制的对象。 
			private var focussedFormControl:DisplayObject; 
			
			//表单是否有效 
			[Bindable] 
			private var formIsValid:Boolean = false;
			
			//表单是否为空 
			[Bindable] 
			public var formIsEmpty:Boolean = true; 
			
			//闪烁使用的filter
			[Bindable]
			private var filter:GlowFilter = new spark.filters.GlowFilter();
			
			/**挂载页面初始化*/
			public function init(event:FlexEvent):void{
				appCore.dataDeal.dataRemote("bugManagerAPI","BugManagerAPI","showUserApllyByID",[billId]);
				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT,loadBugUserApplyInfoInfo);
				
				FlowBillModi = new Event("FlowBillModi");
				this.dispatchEvent(FlowBillModi);
				
//				flowTodoWindow = new FlowTodoWindow();
				this.addEventListener("willAgreeEvent",doWillAgreeeEventHandle);
				
			}
			
			public function doWillAgreeeEventHandle(event:Event):void{
//				appCore.dataDeal.dataRemote("bugManagerAPI","BugManagerAPI","setReplyer",[billId, FAppCore.FCusUser.UserId]);
//				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT,beforeHandle);
			}
			
			public function loadBugUserApplyInfoInfo(event:ResultEvent):void{
				userApply = getResultObj(event);
				
				if(userApply.applyType == 1)
					flowType = "1";
				
				if(userApply.applyStatus == 0)
					isPutButtonView = true;
				else
					//闪烁提示
					showAndHideLabel(!formIsValid);
				
				AppHistoryGrid.gridMain.OnlyInit();
				AppHistoryGrid.getApproveHistory(oprtTypeId, billId);
			}
			
			/**
			 * 同意后处理结果
			 */
			public function flowResult():void{

				appCore.dataDeal.dataRemote("bugManagerAPI","BugManagerAPI","agreeBugUserApplyFlow1st",[billId]);
				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT, flowHanelResult);
				
			}
			
			/**
			 * 同意处理前调用
			 */
			public function agreeBefore():void{
//				var flag:Boolean = false;
//				appCore.dataDeal.dataRemote("bugManagerAPI","BugManagerAPI","setReplyer",[billId, FAppCore.FCusUser.UserId]);
//				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT,beforeHandle);
			}
			
			private function beforeHandle(event:ResultEvent):void{
				
			}
			
			
			private function flowHanelResult(event:ResultEvent):void {
				TAlert.show("数据生效");
			}
			
			/**
			 * 不同意后处理结果
			 */
			public function disagree():void{
				appCore.dataDeal.dataRemote("bugManagerAPI","BugManagerAPI","disagreeBugUserApplyFlow1st",[billId]);
				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT, disagreeResult);
			}
			
			private function disagreeResult(event:ResultEvent):void {
				//TAlert.show("数据生效");
			}
			
			//将远程服务器返回的数据进行处理
			private function getResultObj(event:ResultEvent):Object{
				var resultStr:String = event.result.toString();	
				
				trace("流程:远程服务器返回的数据为："+resultStr);
				
				return new JSONDecoder().decode(resultStr);
			}
			
			//这里主要是因为dropDownList的dataProvider需要的是IList接口对象
			private function getArrayListFromObject(obj:Object):ArrayCollection{
				return new ArrayCollection(new Array(obj));
			}
			
			protected function bugRealRange_clickHandler(event:MouseEvent):void{
				
			}
			
			//向数据库存入数据,并且设置流程"可通过"
			protected function saveBtn_click_handle(event:MouseEvent):void{
				if(formIsValid && !formIsEmpty){
					//FAppCore.FCusUser.UserId是 person_id
					appCore.dataDeal.dataRemote("bugManagerAPI","BugManagerAPI","setReplyer",
						[billId, appCore.loginUser!=null?appCore.loginUser.id:-1, BugUtil.myTrim(planFinishDate.text)]);
					appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT,setReplyerHandle);
				}else
					TAlert.show("输入有误,请查看页面提示信息!","温馨提示");
			}
			
			
			/**保存按钮的回调函数*/
			private function setReplyerHandle(event:ResultEvent):void{
				var flag:Object = getResultObj(event);
				if(flag == 1){
					var FlowBillSave:Event = new Event("FlowBillSave");
					this.dispatchEvent(FlowBillSave);
				}else{
					TAlert.show("系统繁忙,稍后再试!","温馨提示");
				}
			}
			
			//
			private var FISAfterFlowCommit:Boolean=false;
			
			/**呈报按钮点击后将*/
			protected function putBtn_clickHandler(event:MouseEvent):void
			{
					var arr:Array = new  Array();
					var Oitem:String= "department:"+FAppCore.FCusUser.DeptId;
					arr.push(Oitem);
					
					var sender:Object = new Object();
					sender.id=FAppCore.FCusUser.UserId;
					sender.personName=FAppCore.FCusUser.UserName;
					//		fAppCore.StartFlowInstence(sender, item.applyEntry.id, FLOW_TYPE, item.applyId, arr, FISAfterFlowCommit, putBtn_clickHandle);
//					FAppCore.StartFlowInstence(sender, sender.id, FLOW_TYPE, userApply.applyId, arr, FISAfterFlowCommit, putBtn_clickHandle);
					FAppCore.StartFlowInstence(sender, sender.id, flowType, userApply.applyId, arr, FISAfterFlowCommit, putBtn_clickHandle);
			}
			
			private function putBtn_clickHandle(event:ResultEvent):void{
				
				//修改数据库请求单的状态
				//请求状态：0—未提交，1—未受理，2—处理中，3—完成
				userApply.applyStatus = 1;
				userApply.applyStatusStr = "未受理";
				
				//	//处理呈报对象的时间
				//	dateOfuserApplyFormat(userApply);
				//	
				//	var str:String = appCore.jsonEncoder.encode(userApply);//updateUerApplyStatus
				//	handle_server_method("bugManagerAPI","BugManagerAPI","updateBugUerApply",
				//		[str], after_putBtn_clickHandle);
				handle_server_method("bugManagerAPI","BugManagerAPI","updateUerApplyStatusNoDataBack",
					[userApply.applyId, userApply.applyStatus], after_putBtn_clickHandle);
				
			}
			
			private function after_putBtn_clickHandle(event:ResultEvent):void{
				var obj:Object = getResultObj(event);
				if(obj == 1)
//					msg.visible = true;
					refreshMyFlowtodo();
				else
					putBtn_clickHandle(null);
			}
			
//			private function cancelBtn_click_handle(event:MouseEvent):void{
//				planFinishDate.selectedDate = null;
//				planFinishDate.text = "";
//			}
				
			
			
			
			
			
			
			
			/**关闭当前页面*/
			private function refreshMyFlowtodo():void{
				var closeevent:ReloadFlowtodoEvent = new ReloadFlowtodoEvent(this);
				FlexGlobals.topLevelApplication.dispatchEvent(closeevent);
			}
			
			/**用于调用服务器端相应的方法处理*/
			private function handle_server_method(
				componentName:String, className:String, methodName:String, arguments:Array, handleName:Function):void{
				
				appCore = AppCore.getInstance();
				
				appCore.dataDeal.dataRemote(componentName,className,methodName,arguments);
				appCore.dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT, handleName);
			}
			
			/**验证方法*/
			private function validateForm(event:Event):void  
			{                     
				//检查验证传递和返回一个布尔值相应。 
				//保存引用当前集中表单控件 
				//这样isValid()辅助方法可以只通知 
				//当前集中形式控制和不影响 
				//任何其他的表单控件。 
				focussedFormControl = event.target as DisplayObject;   
				
				var info:String = BugUtil.compareDate( 
					DateField.dateToString(new Date(),"YYYY-MM-DD"),
					planFinishDate.text);
				
				// 标记表单有效的开始 
				formIsValid = info == "1";
				
				// 检查表单是否为空 
				formIsEmpty = planFinishDate.text == ""; 
				
				//运行每个验证器反过来,使用isValid() 
				//辅助方法和更新formIsValid的价值 
				//因此。 
				validate(planFinishDateV);  
				
				//闪烁提示
				showAndHideLabel(!formIsValid);
			} 
			
			/** 
			 * 验证方法 
			 * */ 
			private function validate(validator:Validator):Boolean 
			{                 
				//得到验证对象 
				var validatorSource:DisplayObject = validator.source as DisplayObject; 
				
				//镇压事件如果当前控制被验证的不是 
				//当前集中控制的形式。这阻止了用户 
				//从接收视觉验证提示在其他表单控件。 
				var suppressEvents:Boolean = (validatorSource != focussedFormControl); 
				
				//执行验证。返回一个ValidationResultEvent。 
				//传递null作为第一个参数使验证器 
				//使用属性中定义的属性的标记 
				// < mx:Validator >标记。 
				var event:ValidationResultEvent = validator.validate(null, suppressEvents);  
				
				//检查验证传递和返回一个布尔值。 
				var currentControlIsValid:Boolean = (event.type == ValidationResultEvent.VALID); 
				
				// 修改验证标记 
				formIsValid = formIsValid && currentControlIsValid; 
				
				return currentControlIsValid; 
			} 
			
			/** 
			 *  清除验证信息 重置功能 
			 * */ 
			private function clearFormHandler():void 
			{ 
				// 清除所有的值 
				planFinishDate.text = "";
				
				// 清除错误信息 
				planFinishDate.errorString = "";
				
				// 标记为清空 
				formIsEmpty = true; 
				
//				// 获取到焦点 
//				resetFocus();                
			} 
			
			
			/**闪烁提示方法*/
			private var fade:Fade;
			private function showAndHideLabel(isshow:Boolean):void{
				if (isshow){
					lbBeforeSave.width=220;
					lbBeforeSave.visible = true;
					if (!fade){
						fade = new Fade();
						fade.target = lbBeforeSave;
						fade.repeatCount=0;
						fade.repeatDelay=100;
						fade.alphaTo=0;
					}
					fade.play();
				}else{
					lbBeforeSave.width=0;
					lbBeforeSave.visible = false;
					if (fade){
						fade.end();
						fade.stop();
					}
				}
			}
			
		]]>
	</fx:Script>
	
		<s:Scroller width="100%" height="100%">
			<s:VGroup width="100%" height="100%">
				
				<!--<mx:VDividedBox width="100%" height="100%">	-->
				<s:VGroup width="100%" height="100%" minHeight="180">
					
					<s:HGroup width="100%" height="25">
						<s:Button id="saveBtn" 
								  icon="@Embed(source='assets/img/icon/save.png')"
								  width="75" height="100%"
								  label="保存"
								  enabled="{formIsValid}"
								  visible="{!isPutButtonView}"
								  includeInLayout="{!isPutButtonView}"
								  click="saveBtn_click_handle(event)"/>
						<s:Label id="lbBeforeSave" visible="false"  width="0" height="100%"
								 filters="{filter}" text="↙计划解决时间应晚于等于当前时间！"
								 verticalAlign="top"/>
						<!--<s:Button id="cancelBtn" 
								icon="@Embed(source='assets/img/icon/cancel.png')"
								width="6.5%" height="100%" 
								label="取消"
								visible="{!isPutButtonView}"
								includeInLayout="{!isPutButtonView}"
							    click="cancelBtn_click_handle(event)"/>-->
						<s:Button icon="@Embed(source='assets/img/icon/report.png')"
								  id="putBtn" 
								  width="75" height="100%" 
								  label="呈报"
								  visible="{isPutButtonView}"
								  click="putBtn_clickHandler(event)"/>
						<!--<s:Label id="msg" text="呈报成功!"
								 fontSize="25" fontWeight="bold" color="blue"
								 width="15%" height="100%"
								 visible="false"/>-->
							
					</s:HGroup>
					
				<s:HGroup width="100%" height="25"  gap="20" >
					
					<control:FormLabel width="16%" height="100%" 
									   text="报告人:"
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="sponsorInput" 
										 width="16%" height="100%" 
										 enabled="false"
										 text="{userApply != null ? userApply.sponsor.userName : ''}"/>
					
					<control:FormLabel width="16%" height="100%" 
									   text="所属单位:" 
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="companyInput" 
										 width="16%" height="100%" 
										 enabled="false"
										 text="{userApply != null ? userApply.company : ''}"/>
					
					<control:FormLabel width="16%" height="100%" 
									   text="所在部门:" 
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="departmentInput"  
										 width="16%" height="100%" 
										 enabled="false"
										 text="{userApply != null ? userApply.department : ''}"/>
					
				</s:HGroup>
				
				<s:HGroup width="100%" height="25" gap="20" >
					
					<control:FormLabel width="16%" height="100%" 
									   text="联系电话："
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="telephoneInput" 
										 width="16%" height="100%" 
										 enabled="false"
										 text="{userApply != null ? userApply.telephone : ''}"/>
					
					<control:FormLabel width="16%" height="100%" 
									   text="报告时间:"
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="applyStartDate" 
										 width="16%" height="100%" 
										 enabled="false"
										 text="{userApply != null ? userApply.applyStartDate : ''}"/>
					
					<control:FormLabel width="16%" height="100%" 
									   text="期望解决时间:"
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="applyEndDate"  
										 width="16%" height="100%" 
										 enabled="false"
										 text="{userApply != null ? userApply.applyEndDate : ''}"/>
					
				</s:HGroup>
				
				<s:HGroup width="100%" height="25" gap="20" >
					
					<control:FormLabel width="16%" height="100%" 
									   text="{flowType == '1' ? '问题来源：' : 'Bug来源：'}"
									   textAlign="right" verticalAlign="middle" />
					<control:TextInputFl  width="16%" height="100%" 
										  id="bugSource" 
										  enabled="false"
										  text="{userApply != null 
										  ? userApply.applyOrigin != null 
										  ? userApply.applyOrigin.constDetailName : '':''}"/>
					
					<control:FormLabel width="16%" height="100%" 
									   text="重要程度:" 
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="bugUrgent" 
										 width="16%" height="100%" 
										 enabled="false"
										 text="{userApply != null 
										 ? userApply.urgent != null 
										 ? userApply.urgent.levelNameString : '':''}"/>
					
					<control:FormLabel width="16%" height="100%" 
									   text="影响范围:"
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="bugRange"  
										 width="16%" height="100%" 
										 enabled="false"
										 text="{userApply != null 
										 ? userApply.range != null 
										 ? userApply.range.constDetailName : '':''}"/>
					
				</s:HGroup>
				
				<s:HGroup width="100%" height="25" gap="20" >
					<control:FormLabel width="16%" height="100%" 
									   text="所属系统:" 
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="bugSystem" 
										 width="16%" height="100%" 
										 enabled="false"
										 text="{userApply != null 
										 ? userApply.applyOrigin != null 
										 ? userApply.applyOrigin.constDetailName : '':''}"/>
					
					<control:FormLabel width="16%" height="100%" 
									   text="所属业务:"
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="bugModule" 
										 width="16%" height="100%" 
										 enabled="false"
										 text="{userApply != null 
										 ? userApply.applyOrigin != null 
										 ? userApply.applyOrigin.constDetailName : '':''}"/>
					
					<control:FormLabel required="true" 
									   width="16%" height="100%" 
									   label="计划解决时间：" 
									   textAlign="right"
									   verticalAlign="middle"
									   visible="{!isPutButtonView}"/>
					<control:DateFieldFl id="planFinishDate" 
										 width="16%" height="100%"
										 yearNavigationEnabled="true"   
										 disabledRanges="{[ {rangeEnd: new Date(now.fullYear, now.month, now.date-1)}]}"
										 editable="false"
										 formatString="YYYY-MM-DD" 
										 visible="{!isPutButtonView}"
										 change="validateForm(event);"/>
					
					<!--<control:FormLabel width="20%"  text="责任人"
									   textAlign="right" verticalAlign="middle"/>
					<bugmxml:BugFieldSelect id="replyerInput" width="25%"
											parame=""
											armTitleWindow=
											"com.itsm.serviceManager.common.selectWindow.user.SelectUser"
											isMultipleSelected="false"
											selectObj=""
											sText="{userApply != null ? userApply.replyer.userName : ''}"
											textAlign="left"/>-->
					
				</s:HGroup>
				
				<s:HGroup width="100%" height="25" gap="20" >
					<control:FormLabel width="16%" height="100%" 
									   text="主题摘要:"
									   textAlign="right" verticalAlign="middle"/>
					<control:TextInputFl id="applyTitleInput"  
										 width="84%" height="100%" 
										 enabled="false"
										 text="{userApply != null ? userApply.applyTitle : ''}" />
				</s:HGroup>
				
				</s:VGroup>
					
				<s:VGroup id="bottomInfoP" 
						  width="100%" height="100%"
						  gap="0" minHeight="220">
					
					<mx:TabNavigator id="infoList" 
									 width="100%" height="100%" 
									 focusColor="#58F0C0"
									 selectedIndex="1">
						
						<s:NavigatorContent id="bugDirBtn" 
											width="100%" height="100%" 
											label="{flowType == '1' ? '问题描述' : 'bug描述'}">
							<s:TextArea id="directionsArea" 
										left="10" right="10" top="0" bottom="10"
									    width="100%" height="100%"
										text="{userApply != null ? userApply.directions : ''}" 
										textAlign="left"
										editable="false"/>
						</s:NavigatorContent>
						
						<s:NavigatorContent id="docBtn" width="100%" height="100%" label="文档附件">
							
							<s:VGroup left="10" right="10" bottom="10" width="100%" height="100%">
								
								<container:GroupBox width="100%" height="100%" title="附件">
									<mxml:UploadDocumentsInfo id="fileGrid" 
															  height="100%" width="100%"
															  attachMentsArr="{userApply.attachments}"
															  deleteBtnEnable="false"
															  uploadBtnEnable="false"
															  busDataId="{billId}"
															  busTableName="{applyTableName}"/>
								</container:GroupBox>
								
							</s:VGroup>
							
						</s:NavigatorContent>
						
						<!--<s:NavigatorContent id="bugTypeBtn" width="100%" height="100%" label="bug类型">
							<s:VGroup left="10" right="10" bottom="10" height="100%">
								<s:HGroup width="100%" height="9%">
									
									<control:FormLabel required="true" width="10%" height="100%" fontSize="12" label="实际影响范围："
													   verticalAlign="middle"/>
									<s:ComboBox id="bugRealRange" width="10%" height="100%"
												labelField="constDetailName" 
												textAlign="left"
												click="bugRealRange_clickHandler(event)"
												dataProvider="{getArrayListFromObject(userApply.realRange)}"
												selectedIndex="0"
												enabled="true"
											    mouseOver="bugTypeBtn_creationCompleteHandler(event)"/>
									
								</s:HGroup>
								<s:HGroup width="100%" height="45%">
									
									<control:FormLabel required="true" width="10%" height="25%" label="bug原因分析："
													   verticalAlign="middle"/>
									<s:TextArea id="reasonArea" width="90%" height="100%"
												text="{userApply != null ? userApply.reason : ''}" 
												textAlign="left"
												verticalAlign="middle"
												editable="true"/>
									
								</s:HGroup>
								<s:HGroup width="100%" height="45%">
									
									<control:FormLabel required="true" width="10%" height="25%" label="bug解决方案："
													   verticalAlign="middle"/>
									<s:TextArea id="solutionsArea" width="90%" height="100%"
												text="{userApply != null ? userApply.solutions : ''}" 
												verticalAlign="middle"
												editable="true"/>
								</s:HGroup>
							</s:VGroup>
						</s:NavigatorContent>-->
						
					</mx:TabNavigator>
					
				</s:VGroup>
				
				<s:VGroup width="100%" height="100%" minHeight="240">
					<flow:ComApproveHistory id="AppHistoryGrid" width="100%" height="100%"/>
				</s:VGroup>
				
				<!--</mx:VDividedBox>-->
					
			</s:VGroup>
			
		</s:Scroller>
	
</s:Module>
