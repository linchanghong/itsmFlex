<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true">
	
	<fx:Script>
		<![CDATA[
			import com.itsm.common.mxml.AddCompanyWindow;
			import com.itsm.common.mxml.AddDepartmentWindow;
			import com.itsm.common.utils.AppCore;
			import com.itsm.sys.OrganizeManager;
			
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			protected function adddep_clickHandler(event:MouseEvent):void
			{
				//加载数据
				AppCore.getInstance().dataDeal.dataRemote("common","Common","getDepartmentByCompany",[this.data.companyId.toString()]);
				AppCore.getInstance().dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT, finddepsHandle);
				
				
			}
			private function finddepsHandle(event:ResultEvent):void
			{
				var popwindow:AddDepartmentWindow = AddDepartmentWindow(PopUpManager.createPopUp(this, AddDepartmentWindow, true));
				popwindow.allDepData = event.result as ArrayCollection;
				popwindow.selCompany = data as Object;
				popwindow.owner = this;
				popwindow.selectObject=null;
				PopUpManager.centerPopUp(popwindow);
			}
			
			protected function updateCom_clickHandler(event:MouseEvent):void
			{
				var popwindow:AddCompanyWindow = AddCompanyWindow(PopUpManager.createPopUp(this, AddCompanyWindow, true));
				popwindow.allComData = OrganizeManager.allCompany;
				popwindow.owner = this;
				popwindow.selectObject=data as Object;
				PopUpManager.centerPopUp(popwindow);
				popwindow.addEventListener(CloseEvent.CLOSE,addCompanyHandler);
			}
			
			protected function addCompanyHandler(event:CloseEvent):void
			{
				if((event.target as AddCompanyWindow).selectObject != null ){
					this.data = event.target.selectObject;
					//allCompany.addItem(event.target.selectObject);
				}
			}

			
			protected function deleteCom_clickHandler(event:MouseEvent):void
			{
				AppCore.getInstance().dataDeal.dataRemote("common","Common","deleteCompanyById",[this.data.companyId.toString()]);
				AppCore.getInstance().dataDeal.remoteMethods.addEventListener(ResultEvent.RESULT, deleteHanle);
			}
			private function deleteHanle(event:ResultEvent):void
			{
				if(event.result as Boolean){
					OrganizeManager.allCompany.removeItemAt(OrganizeManager.allCompany.getItemIndex(this.data));
				}
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />            
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	
	<s:HGroup width="100%" height="25" verticalAlign="middle">
		<s:Image width="20" height="20" source="assets/img/icon/yanshou.png"/>
		<s:Label paddingLeft="6" text="{data.companyName}" fontWeight="bold"/>
		<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="right" visible.normal="false" visible.hovered="true" visible.selected="true">
			<s:Button id="adddep" label="添加部门"  width="65" height="18" fontSize="11" click="adddep_clickHandler(event)" />
			<s:Button id="updateCom" label="修改" width="45"  height="18" fontSize="11" click="updateCom_clickHandler(event)"/>
			<s:Button id="deleteCom" label="删除" width="45" height="18" fontSize="11" click="deleteCom_clickHandler(event)"/>
		</s:HGroup>
	</s:HGroup>
	
	
</s:ItemRenderer>
